{
  "hash": "b9fd6f78b5c3ad175ea6b10186902e9b",
  "result": {
    "markdown": "---\ntitle: \"Day 05: `fct_collapse()`\"\ndate: \"2022-12-05\"\ndescription:  |\n  Easily combine multiple factor levels with `forcats::fct_collapse()`.\nimage: fct-collapse-color-swatches-min.png\nimage-alt: \"Three rows of color swatches (green, blue, and red) each of which shows a single square of a color on the left of an equation followed by = and c() surrounding four swatches of different shades of the color on the LHS of the equation.\"\ntags: \n  - forcats\n---\n\n\nThe [forcats](https://forcats.tidyverse.org/) package [@forcats] provides several functions for [changing the value of factor levels](https://forcats.tidyverse.org/reference/index.html#change-value-of-levels)---the most generic being [`fct_recode()`](https://forcats.tidyverse.org/reference/fct_recode.html), which lets you change factor levels by hand.\n\n[**`fct_collapse()`**](https://forcats.tidyverse.org/reference/fct_collapse.html) is a variant of `fct_recode()` that lets you combine (or _collapse_) a vector of old levels into a new level (rather than specifying the new level for each individual old level, as you'd have to do with `fct_recode()`).\n\nIt's a function I use when I want to effectively lower the resolution of my data&mdash;i.e. the original levels are more specific than I need for the purposes of my analysis.[^1]\n\nIn this simple example, we'll combine political affiliations (`partyid`) from the General Social Survey dataset ([`gss_cat`](https://forcats.tidyverse.org/reference/gss_cat.html)) included in forcats.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(forcats)\n```\n:::\n\n\nLet's look at the levels we have to begin with:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(gss_cat$partyid)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"No answer\"          \"Don't know\"         \"Other party\"       \n [4] \"Strong republican\"  \"Not str republican\" \"Ind,near rep\"      \n [7] \"Independent\"        \"Ind,near dem\"       \"Not str democrat\"  \n[10] \"Strong democrat\"   \n```\n:::\n:::\n\n\nPerhaps I just want to know if they're a Republican, Democrat, Independent, or something else--a perfect use case for `fct_collapse()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngss_cat |>\n  mutate(\n    party_generic = fct_collapse(partyid,\n      \"Other\" = c(\"No answer\", \"Don't know\", \"Other party\"),\n      \"Republican\" = c(\"Strong republican\", \"Not str republican\"),\n      \"Independent\" = c(\"Independent\", \"Ind,near dem\", \"Ind,near rep\"),\n      \"Democrat\" = c(\"Strong democrat\", \"Not str democrat\")\n    )\n  ) |> \n  count(party_generic)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 Ã— 2\n  party_generic     n\n  <fct>         <int>\n1 Other           548\n2 Republican     5346\n3 Independent    8409\n4 Democrat       7180\n```\n:::\n:::\n\n\n\n## Learn more\n\nFor more information, see the [`fct_collapse()`](https://forcats.tidyverse.org/reference/fct_collapse.html) function reference, as well as the section on [modifying factor levels](https://r4ds.hadley.nz/factors.html#modifying-factor-levels) in [R for Data Science](https://r4ds.hadley.nz/).\n\n[^1]: For this same reason, I often save my collapsed factor as a new variable so that the finer details are preserved.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}